@startuml cd_no_dst_dt
title cd:TimeModule

'==================
' Interfaces
'==================
interface ITimeModule {
    + {abstract} CurrentTimeUtc() : void
    + {abstract} CurrentTimeLocal() : void
    + {abstract} OffsetTime(DateTime dt, int days, int hours, int minutes) : void
    + {abstract} ExternalTimeCorrection(DateTime dt) : void
    + {abstract} FromDateTimeToUnix(DateTime dt) : void
    + {abstract} FromUnixToDateTime(Int unix) : void
    + {abstract} ShowDaylightSavingPeriod() : void
}

interface ITimeNow {
    + {abstract} CurrentUtc() : DateTime
    + {abstract} CurrentLocal() : DateTime
}

'==================
' Classes
'==================
class TimeModule implements ITimeModule {
    'Instances
    - _timeNow : ITimeNow
    'Fields/Attributes
    + Timestamp : DateTime {get; set;}
    + TimestampUnix : int {get;}
    + Daylight  : DaylightTime  {get; set;}
    + LocalZone : TimeZone {get; set;}
    + CurrentDate : DateTime {get; set;}
    + CurrentYear : int {get;}
    + DaylightStart : DateTime {get;}
    + DaylightEnd : DateTime {get;}
    + DaylightDelta : TimeSpan {get;}
    + UnixEpoch : DateTime {get;}

    'Methods
    TimeModule(ITimeNow tm)
    + CurrentTimeUTC() : void
    + CurrentTimeLocal() : void
    + OffsetTime(DateTime dt, int days, int hours, int minutes) : void
    + ExternalTimeCorrection(DateTime dt) : void
    + FromDateTimeToUnix(DateTime dt) : void
    + FromUnixToDateTime(Int unix) : void
    + ShowDaylightSavingPeriod() : void
    - _convertToLocalTime(DateTime dt) : void
    - _compensateForTimeChangeDueToDst(DateTime dt) : void
}

class TimeNow implements ITimeNow {
    'Methods
    + CurrentUtc() : DateTime
    + CurrentLocal() : DateTime
}

'==================
' External Packages
'==================
package System {

    class DateTime {
    + NowUtc() : DateTime
    + NowLocal() : DateTime
    + ToLocalTime() : DateTime
    + Add(TimeSpan offset) : DateTime
    + IsDayLightSavingTime() : bool
    }

    class TimeSpan {

    }

    class TimeZone {
        'Deprecated: TODO replace with TimeZoneInfo
    }

    class Console {
       + writeline(string line) : void
    }

    class DaylightTime {
    }
}

'==================
' Connections
'==================

TimeModule --> System
TimeModule <|-- TimeNow

@enduml